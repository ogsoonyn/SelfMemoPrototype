<mahApps:MetroWindow x:Class="SelfMemoPrototype.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SelfMemoPrototype"
        xmlns:b="clr-namespace:SelfMemoPrototype.Behavior"
        xmlns:vm="clr-namespace:SelfMemoPrototype.ViewModel"
        xmlns:mahApps="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Dialog:DialogParticipation.Register="{Binding}"
        FocusManager.FocusedElement="{Binding ElementName=SearchTextBox}" AllowDrop="True" Drop="Window_Drop" PreviewDragOver="Window_PreviewDragOver"
        Title="{Binding AppName.Value}" MinHeight="300" MinWidth="450" SaveWindowPosition="True" TitleCharacterCasing="Normal" ResizeMode="CanResizeWithGrip">

    <i:Interaction.Behaviors>
        <b:ApplicationCommandBehavior/>
    </i:Interaction.Behaviors>

    <mahApps:MetroWindow.DataContext>
        <vm:MainViewModel>
            <vm:MainViewModel.DialogCoordinator>
                <Dialog:DialogCoordinator/>
            </vm:MainViewModel.DialogCoordinator>
        </vm:MainViewModel>
    </mahApps:MetroWindow.DataContext>

    <!--
    <mahApps:MetroWindow.RightWindowCommands>
        <mahApps:WindowCommands>
            <Button>
                <md:PackIcon Kind="Help"/>
            </Button>
        </mahApps:WindowCommands>
    </mahApps:MetroWindow.RightWindowCommands>
    -->
    
    <mahApps:MetroWindow.Resources>
        <ContextMenu x:Key="sampleWinMenu">
            <MenuItem Header="Show" Click="MenuItem_Show_Click"/>
            <MenuItem Header="Exit" Click="MenuItem_Exit_Click"/>
        </ContextMenu>
    </mahApps:MetroWindow.Resources>
    
    <DockPanel>
        <DockPanel.InputBindings>
            <KeyBinding Key="R" Modifiers="Ctrl" Command="{Binding OpenRegisterWindowCmd}"/>
            <KeyBinding Key="D" Modifiers="Ctrl" Command="{Binding ClearCategoryFilterCmd}"/>
            <KeyBinding Key="E" Modifiers="Ctrl" Command="{Binding FocusOnSearchBoxCmd}"/>
            <KeyBinding Key="Esc" Command="Close"/>
        </DockPanel.InputBindings>

        <DockPanel DockPanel.Dock="Top">
            <Menu DockPanel.Dock="Left" IsMainMenu="True" VerticalAlignment="Center">
                <MenuItem>
                    <MenuItem.Header>
                        <md:PackIcon Kind="Menu" TabIndex="1" IsTabStop="True"/>
                    </MenuItem.Header>
                    <MenuItem Header="登録ダイアログを開く" Command="{Binding OpenRegisterWindowCmd}"
                          InputGestureText="Ctrl+R"/>
                    <MenuItem Header="検索フォームの入力を登録ダイアログにコピーする"
                          ToolTip="チェックを入れると、登録ダイアログを開いたときに検索フォームの入力をダイアログ側にコピーする"
                          IsCheckable="True" IsChecked="{Binding CopySearchWordToRegister.Value}"/>
                    <MenuItem Header="編集ロック" IsCheckable="True"
                          ToolTip="チェックを外すとSelected Item枠でのデータ編集が可能になる"
                          IsChecked="{Binding LockGridEdit.Value}"/>
                    <MenuItem Header="Deleteキーでのテーブルの項目削除を許容する" IsCheckable="True"
                          ToolTip="チェックを入れるとDeleteキーでの項目削除が可能になる"
                          IsChecked="{Binding AllowDeleteItem.Value}" IsEnabled="{Binding LockGridEdit.Value, Converter={StaticResource BoolNegative}}"/>
                    <MenuItem Header="グローバルホットキーの設定" Command="{Binding OpenSettingWindowCmd}"/>
                    <MenuItem Header="現在表示中のリストをfiltered.jsonに保存" Command="{Binding SaveFilteredItemsCmd}"/>
                    <MenuItem Header="実行ファイルのフォルダを開く" Command="{Binding OpenAppFolderCmd}"/>
                    <MenuItem Header="閉じる" Command="Close" InputGestureText="Esc"/>
                    <MenuItem Header="アプリケーションを終了" Click="MenuItem_Exit_Click"/>
                </MenuItem>
            </Menu>

            <ComboBox DockPanel.Dock="Right" ItemsSource="{Binding CategoryList}" Margin="10,0"
                                      SelectedItem="{Binding CategoryListSelected.Value, Mode=TwoWay}" MinWidth="150"
                                      Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                      md:TextFieldAssist.HasClearButton="True"
                                      md:TextFieldAssist.UnderlineBrush="{DynamicResource SecondaryHueMidBrush}"
                                      md:ColorZoneAssist.Mode="Inverted"
                                      md:HintAssist.Hint="カテゴリフィルタ" TabIndex="3">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ChangeCategoryFilterCmd}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <md:PackIcon DockPanel.Dock="Left" Kind="Magnify" VerticalAlignment="Center" Foreground="{Binding ElementName=SearchTextBox, Path=BorderBrush}"/>
            <TextBox x:Name="SearchTextBox" Style="{StaticResource MaterialDesignTextBox}"
                     VerticalContentAlignment="Center"
                     b:FocusExtension.IsFocused="{Binding SearchBoxIsFocused.Value}"
                         md:HintAssist.Hint="検索 (Ctrl+E)" md:TextFieldAssist.HasClearButton="True" Margin="10,3"
                         Text="{Binding FilterStr.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TabIndex="2"/>
        </DockPanel>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem HorizontalAlignment="Left" Visibility="{Binding UseFilterStr.Value, Converter={StaticResource BoolToVisible}}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Kwd: " FontWeight="Bold" />
                    <TextBlock Text="{Binding FilterStr.Value}"/>
                </StackPanel>
            </StatusBarItem>

            <StatusBarItem HorizontalAlignment="Left" Visibility="{Binding UseCategoryList.Value, Converter={StaticResource BoolToVisible}}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Cat: " FontWeight="Bold"/>
                    <TextBlock Text="{Binding CategoryListSelected.Value}"/>
                </StackPanel>
            </StatusBarItem>

            <StatusBarItem HorizontalAlignment="Right" Margin="0,0,15,0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding FilteredItems.Count}"/>
                    <TextBlock Text="/"/>
                    <TextBlock Text="{Binding MemoList.Count}"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>

        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="2*" MinWidth="10"/>
            </Grid.ColumnDefinitions>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>

            <ScrollViewer Grid.Column="2" VerticalScrollBarVisibility="Auto">
                <Grid VerticalAlignment="Stretch">
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="8"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="キーワード" FontWeight="Bold"/>
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="キーワード2" FontWeight="Bold"/>
                    <TextBlock Grid.Row="2" Grid.Column="0" Text="説明" FontWeight="Bold"/>
                    <TextBlock Grid.Row="3" Grid.Column="0" Text="カテゴリ" FontWeight="Bold"/>
                    <TextBlock Grid.Row="4" Grid.Column="0" Text="更新日" FontWeight="Bold"/>
                    <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.ColumnSpan="2">
                        <TextBlock Text="画像" FontWeight="Bold"/>
                        <Button Content="ビューアで見る" Command="{Binding OpenAsImageViewerCmd}" IsEnabled="{Binding SelectedItem.Value.HasImageSource.Value}"
                                Margin="3" ToolTip="画像ビューアを開きます"/>
                        <Button Content="貼付" Command="{Binding PasteImageCmd}" IsEnabled="{Binding LockGridEdit.Value, Converter={StaticResource BoolNegative}}"
                                Margin="3" ToolTip="クリップボードに画像があれば、貼り付けます（上書きされるので注意）"/>
                        <Button Content="削除" Command="{Binding RemoveImageCmd}" IsEnabled="{Binding LockGridEdit.Value, Converter={StaticResource BoolNegative}}"
                                Margin="3" ToolTip="画像を削除します" Style="{StaticResource MaterialDesignRaisedAccentButton}"/>
                    </StackPanel>

                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding FilteredItems.CurrentItem.Keyword_R.Value}"
                           Visibility="{Binding LockGridEdit.Value, Converter={StaticResource BoolToVisible}}"/>
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding FilteredItems.CurrentItem.Keyword2_R.Value}"
                           Visibility="{Binding LockGridEdit.Value, Converter={StaticResource BoolToVisible}}"/>
                    <TextBlock Grid.Row="2" Grid.Column="1" local:NavigationService.Text="{Binding FilteredItems.CurrentItem.Description_R.Value}"
                           Visibility="{Binding LockGridEdit.Value, Converter={StaticResource BoolToVisible}}"/>
                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding FilteredItems.CurrentItem.Category_R.Value}"
                           Visibility="{Binding LockGridEdit.Value, Converter={StaticResource BoolToVisible}}"/>

                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding FilteredItems.CurrentItem.Keyword_R.Value, UpdateSourceTrigger=PropertyChanged}" 
                         TextWrapping="Wrap" Visibility="{Binding LockGridEdit.Value, Converter={StaticResource BoolNegativeToVisible}}"/>
                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding FilteredItems.CurrentItem.Keyword2_R.Value, UpdateSourceTrigger=PropertyChanged}" 
                         TextWrapping="Wrap" Visibility="{Binding LockGridEdit.Value, Converter={StaticResource BoolNegativeToVisible}}"/>
                    <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding FilteredItems.CurrentItem.Description_R.Value, UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="Wrap" Width="Auto" AcceptsReturn="True" Visibility="{Binding LockGridEdit.Value, Converter={StaticResource BoolNegativeToVisible}}"/>
                    <Grid Grid.Row="3" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="*" MinWidth="100"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Text="{Binding FilteredItems.CurrentItem.Category_R.Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     TextWrapping="Wrap" Visibility="{Binding LockGridEdit.Value, Converter={StaticResource BoolNegativeToVisible}}"/>
                        <ComboBox Grid.Column="1" SelectedItem="{Binding CategoryEditorSelectedItem.Value, UpdateSourceTrigger=PropertyChanged}"
                                      ItemsSource="{Binding CategoryList}" Visibility="{Binding LockGridEdit.Value, Converter={StaticResource BoolNegativeToVisible}}"
                                      Margin="10, 0">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding ChangeCategoryEditorCmd}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                    </Grid>

                    <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding FilteredItems.CurrentItem.Date_R.Value, StringFormat={}{0:yyyy/M/d H:mm:ss}}" TextWrapping="Wrap"/>

                    <CheckBox Grid.Row="5" Grid.ColumnSpan="2" Margin="5, 0" Style="{StaticResource MaterialDesignCheckBox}"
                          ToolTip="ロック解除するとデータの書き換えができます。ロック中はURLのリンク化が行われます"
                          IsChecked="{Binding LockGridEdit.Value}">
                        <ContentControl IsTabStop="False">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="Resources/tool_padlock01_01.png" VerticalAlignment="Center" Height="20"/>
                                <TextBlock Text="編集ロック" VerticalAlignment="Center"/>
                                <TextBlock Text="(※ロック中は「説明」のURL記載がリンク化)" FontSize="11"/>
                            </StackPanel>
                        </ContentControl>
                    </CheckBox>

                    <StackPanel Grid.Row="7" Grid.ColumnSpan="2" Margin="5">
                        <Border BorderThickness="1" BorderBrush="Black" VerticalAlignment="Top" HorizontalAlignment="Left" 
                                Width="{Binding ElementName=I_Image, Path=ActualWidth}" Height="{Binding ElementName=I_Image, Path=ActualHeight}">
                            <Image Name="I_Image" Stretch="Uniform" StretchDirection="DownOnly"
                                   Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=StackPanel}}"
                                   Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=StackPanel}}"
                                   Source="{Binding FilteredItems.CurrentItem.ImageSource_R.Value, UpdateSourceTrigger=PropertyChanged}"/>
                        </Border>
                    </StackPanel>
                </Grid>
            </ScrollViewer>

            <DataGrid Grid.Column="0" ItemsSource="{Binding FilteredItems}" IsReadOnly="False"
                  AutoGenerateColumns="False" CanUserDeleteRows="{Binding AllowDeleteItem.Value}" TabIndex="4" IsTabStop="True">
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" Binding="{Binding ID_R.Value}" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="Padding" Value="3"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="キーワード" Binding="{Binding Keyword_R.Value}" MaxWidth="230" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="Padding" Value="3"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="キーワード2" Binding="{Binding Keyword2_R.Value}" MaxWidth="230" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="Padding" Value="3"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn x:Name="desc" Header="説明" Binding="{Binding Description_R.Value}" MaxWidth="600" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="Padding" Value="3"/>
                                <!--
                            <Setter Property="local:NavigationService.Text" Value="{Binding DescriptionR.Value}"/>
                            -->
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="AcceptsReturn" Value="True"/>
                                <Setter Property="Padding" Value="3"/>
                                <!--
                            <Setter Property="Text" Value="{Binding DescriptionR.Value}"/>
                            -->
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="カテゴリ" Binding="{Binding Category_R.Value}" MaxWidth="200" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="Padding" Value="3"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="更新日" Binding="{Binding Date_R.Value, StringFormat={}{0:yyyy/M/d H:mm:ss}}" MaxWidth="180" IsReadOnly="True">
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="IsReadOnly" Value="True"/>
                                <Setter Property="Padding" Value="3"/>
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>

                    <DataGridTemplateColumn Header="画像" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Source="{Binding ImageSource_R.Value}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="3" MaxHeight="200" StretchDirection="DownOnly"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </DockPanel>
</mahApps:MetroWindow>
